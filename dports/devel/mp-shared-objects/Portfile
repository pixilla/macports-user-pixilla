# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4
# $Id$


PortSystem          1.0

name                mp-shared-objects
version             0.0.2
categories          devel
platforms           darwin
license             BEERWARE-42+
maintainers         pixilla
distfiles

description         Use otool to show/verify shared objects.
long_description    ${description}

homepage            {}
master_sites        {}
extract.mkdir       yes
use_configure       no
build {
    set fp [open ${worksrcpath}/${name} w]
    puts $fp \
{#!/usr/bin/env bash
# Argument = [-q] <path name>

eError="error: no such path"

usage()
{
cat << EOF

usage: $(basename $0) options

This script runs otool -XL over the contents of a path:
\$ $(basename $0) -p /opt/local/lib/mysql5
or a MacPorts port name:
\$ $(basename $0) -p mysql5 -m


OPTIONS:
    -h      Show this message
    -p      Path or Port (requires -m) to check
    -m      Use -p as a port name rather then a path
    -c      Check if shared library exists, print "${eError}" if it does not
    -q      Quite, only print errors, implies -c
    -s      Stop on errors

EOF
}

[ -z $TYPE ] && TYPE=PATH
[ -z $CHECK_EXISTS ] && CHECK_EXISTS=
[ -z $QUITE ] && QUITE=
[ -z $STOP ] && STOP=

while getopts "hp:mcqs" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        p)
            NAME=$OPTARG
            ;;
        m)
            TYPE=PORT
            ;;
        c)
            CHECK_EXISTS=yes
            ;;
        q)
            QUITE=yes
            CHECK_EXISTS=yes
            ;;
        s)
            STOP=yes
            ;;
        ?)
            usage
            exit
            ;;
    esac
done

if [[ -z $NAME ]]
then
    usage
    exit 1
fi

IFS=$'\n'
if [ "${TYPE}" == "PATH" ]
then
  FILES=( $(find "${NAME}" -type f) )
fi
if [ "${TYPE}" == "PORT" ]
then
  FILES=( $(port -q contents "${NAME}" | sed -e "s/^ *//") )
fi
for (( fc = 0 ; fc < ${#FILES[@]} ; fc++ ))
do
    if [[ ! -f "${FILES[$fc]}" && ! -d "${FILES[$fc]}" ]]
    then
        echo "FILE ${eError}: ${FILES[$fc]}"
        break 1
    fi
    if [ ! -d "${FILES[$fc]}" ]
    then    
        SHAREDLIBRARYS=( $(otool -XL "${FILES[$fc]}" | sed -e "s/^Archive.*//" | tr -d '\t' | awk '{print $1}') )
        if [[ ${#SHAREDLIBRARYS[@]} -gt 0 ]]
        then
            [ -z $QUITE ] && echo "${FILES[$fc]}"
            for (( sc = 0 ; sc < ${#SHAREDLIBRARYS[@]} ; sc++ ))
            do
                if [ ! -f "${SHAREDLIBRARYS[$sc]}" ]
                then
                    [ -n $QUITE ] && echo "${FILE[$fc]}"
                    echo "SHAREDLIBRARY ${eError}: ${SHAREDLIBRARYS[$sc]}"
                    [ "${STOP}" == "yes" ] && break 2
                else
                    [ -z $QUITE ] && echo -e "\t${SHAREDLIBRARYS[$sc]}"
                fi
            done
        fi
    fi
done
unset IFS
unset NAME
unset CHECK_EXISTS
unset QUITE
    }
    close $fp
}
destroot {
    xinstall -m 755 -W ${filespath} mp-shared-objects \
        ${destroot}${prefix}/sbin/
}
